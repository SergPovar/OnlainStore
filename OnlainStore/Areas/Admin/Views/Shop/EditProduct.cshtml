@model OnlainStore.Models.ViewModel.Pages.ProductVM

@{
    ViewBag.Title = "Edit product";
    Layout = "_Layout";
}

<h2>Edit product</h2>
@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}
@using (Html.BeginForm("EditProduct", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id_product)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Id_category, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Id_category, Model.Categories, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id_category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
                @if (@Model.ImageName != "No image")
                {
                    <img style='width:200px; height:200px;' src="~/IMG/Uploads/Products/@Model.Id_product/Avatar/@Model.ImageName" alt=""/>
                }
                <br/>
                <img id="imgpreview" src="~/IMG/no-image.png" alt=""/>
                <div class="col-md-10" style='width:100px; height:100px;'>
                    <input type="file" name="file"id="imageUpload"/>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit Product" class="btn btn-success"/>
            </div>
        </div>
    </div>
}
<hr/>
@if (Model.GalleryImages == null)
{
    <h3>There are not gallery images</h3>
}
<form action="/admin/shop/SaveGalleryImages" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
    <div class="fallback">
        <input type="file" name="file" multiple=""/>
        <input type="submit" value="Upload"/>
    </div>
</form>
<br/><br/>
@if (Model.GalleryImages != null)
{
    <div class="row">
        @foreach (var image in Model.GalleryImages)
        {
            <div class="col">
                <div class="galleryStyle">
                    <div>
                        <img style="width:200px; height:200px;" src="/IMG/Uploads/Products/@Model.Id_product/Gallery/@image"/>
                    </div>
                    <div style="text-align: center">
                        @Html.ActionLink("Delete", "DeleteImage", "Shop", "", new { @class = "deleteimage btn btn-danger", data_name = image, style = "margin: 10px" })
                    </div>
                </div>
            </div>
        }
    </div>
}
<div>
    @Html.ActionLink("Back to Products", "Products", new { area = "Admin", controller = "Shop" })
</div>

@section Scripts
{
    <script src="~/js/AddProductScripts.js" asp-append-version="true"></script>
    <script>
             Dropzone.options.dropzoneForm = {
                acceptedFiles: "image/*",
                init: function () {
                    this.on("complete",
                        function (file) {
                            if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                                location.reload();
                            }
                        });
                    this.on("sending",
                        function (file, xhr, formData) {
                            formData.append("id",  @Model.Id_product);
                        });
                }
            };
                $("a.deleteimage").click(function(e) {
                    e.preventDefault();
    
                    if (!confirm("Confirm deletion")) return false;
    
                    var $this = $(this);
                    var url = "/admin/shop/DeleteImage";
                    var imageName = $this.data("name");
    
    
                    $.post(url, { id: @Model.Id_product, imageName: imageName }, function(data) {
                        $this.parent().parent().parent().fadeOut("slow");
                    });
                });
 </script>

}